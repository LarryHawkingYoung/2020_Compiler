加法运算符 = '[+-]'
乘法运算符 = '[*/]'
关系运算符 = '<|<=|>|>=|!=|=='
字母 = '[_a-zA-Z]'
数字 = '[0-9]'
字符 = '\'' + 加法运算符 + '\'|\'' + 乘法运算符 + '\'|\'' + 字母 + '\'|\'' + 数字 + '\''
字符串 = "\"( |!|#|\$|%|&|'|\(|\)|\*|\+|,|-|\.|\/|0|1|2|3|4|5|6|7|8|9|:|;|<|=|>|\?|@|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|X|Y|Z|\[|\\|\]|\^|_|`|a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z|{|\||}|~)*\""
标识符 = '(' + 字母 + '(' + 字母 + '|' + 数字 + ')*)'
无符号整数 = 数字 + '+'
整数 = '[+-]?' + 无符号整数
常量定义 = '(int' + 标识符 + '=' + 整数 + '(,' + 标识符 + '=' + 整数 + ')*)|(char' + 标识符 + '=(' + 字符 + ')(,' + 标识符 + '=(' + 字符 + '))*)'
常量说明 = '(const(' + 常量定义 + ');)+'
声明头部 = '(int' + 标识符 + ')|(char' + 标识符 + ')'
常量 = '((' + 整数 + ')|(' + 字符 + '))'
类型标识符 = '(int|char)'
变量定义无初始化 = 类型标识符 + '(' + 标识符 + '|' + 标识符 + '\[' + 无符号整数 + '\]|' + 标识符 + '\[' + 无符号整数 + '\]\[' + 无符号整数 + '\])+'
变量定义及初始化 = 类型标识符 + '(' + 标识符 + '=' + 常量 + '|' + 标识符 + '\[' + 无符号整数 + '\]={' + 常量 + '(,' + 常量 + ')*' + '}|' + 标识符 + '\[' + 无符号整数 + '\]\[' + 无符号整数 + '\]={{' + 常量 + '(,' + 常量 + ')*}(,{' + 常量 + '(,' + 常量 + ')*' + '})*})'
变量定义 = '((' + 变量定义无初始化 + ')|(' + 变量定义及初始化 + '))'
变量说明 = '(' + 变量定义 + ';)+'
参数表 = '[' + 类型标识符 + 标识符 + '(,' + 类型标识符 + 标识符 + ')*]'
有返回值函数调用语句 = 标识符 + '\((' + '1|1,2|1,2,3' + ')?\)'
因子 = '(' + 标识符 + '|' + 标识符 + '\[5\]|' + 标识符 + '\[-0\]\[\+2\]|\(-2\+5-0\)|' + 整数 + '|(' + 字符 +')|' + 有返回值函数调用语句 + ')'
项 = 因子 + '(' + 乘法运算符 + 因子 + ')*'
表达式 = '[+-]?' + 项 + '(' + 加法运算符 + 项 + ')*'
条件 = 表达式 + 关系运算符 + 表达式
步长 = 无符号整数
循环语句 = 'while\(' + 条件 + '\)' +
语句 = ''
语句列 = ''
复合语句 = ''
有返回值函数定义 = ''


程序 = ''

print(条件)
